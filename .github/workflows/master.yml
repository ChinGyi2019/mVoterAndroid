name: Master Branch CI/CD

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'

jobs:
  test:
    name: Static Code Check & Test
    runs-on: ubuntu-latest
    env:
      RELEASE_KEYSTORE_BASE64: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}
      RELEASE_KEYSTORE_PATH: ${{ secrets.RELEASE_KEYSTORE_PATH }}
      RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
      RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
      RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
      GOOGLE_SERVICE_JSON_BASE64: ${{ secrets.GOOGLE_SERVICE_JSON_BASE64 }}
      DEVELOPMENT_API_SECRET: ${{ secrets.DEVELOPMENT_API_SECRET }}
      RELEASE_API_SECRET: ${{ secrets.RELEASE_API_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - run: touch local.properties
      - run: touch $RELEASE_KEYSTORE_PATH
      - run: echo $RELEASE_KEYSTORE_BASE64 | base64 --decode > $RELEASE_KEYSTORE_PATH
      - run: echo -e "\nRELEASE_KEYSTORE_PATH=$RELEASE_KEYSTORE_PATH" >> local.properties
      - run: echo -e "\nRELEASE_KEYSTORE_PASSWORD=$RELEASE_KEYSTORE_PASSWORD" >> local.properties
      - run: echo -e "\nRELEASE_KEY_ALIAS=$RELEASE_KEY_ALIAS" >> local.properties
      - run: echo -e "\nRELEASE_KEY_PASSWORD=$RELEASE_KEY_PASSWORD" >> local.properties
      - run: echo -e "\nDEVELOPMENT_API_SECRET=$nDEVELOPMENT_API_SECRET" >> local.properties
      - run: echo -e "\nRELEASE_API_SECRET=$RELEASE_API_SECRET" >> local.properties

      - run: touch app/google-services.json
      - run: echo $GOOGLE_SERVICE_JSON_BASE64 | base64 -di > app/google-services.json

      - name: Lint check
        run: ./gradlew lint

      - name: KtLint Check
        run: ./gradlew ktlintCheck

      - name: Unit Test
        run: ./gradlew test

  create_apk:
    needs: test
    name: Deploy APK
    runs-on: ubuntu-18.04
    env:
      RELEASE_KEYSTORE_BASE64: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}
      RELEASE_KEYSTORE_PATH: ${{ secrets.RELEASE_KEYSTORE_PATH }}
      RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
      RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
      RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
      GOOGLE_SERVICE_JSON_BASE64: ${{ secrets.GOOGLE_SERVICE_JSON_BASE64 }}
      DEVELOPMENT_API_SECRET: ${{ secrets.DEVELOPMENT_API_SECRET }}
      RELEASE_API_SECRET: ${{ secrets.RELEASE_API_SECRET }}
      DEPLOY_SECRET: ${{ secrets.DEPLOY_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - run: touch local.properties
      - run: touch $RELEASE_KEYSTORE_PATH
      - run: echo $RELEASE_KEYSTORE_BASE64 | base64 --decode > $RELEASE_KEYSTORE_PATH
      - run: echo -e "\nRELEASE_KEYSTORE_PATH=$RELEASE_KEYSTORE_PATH" >> local.properties
      - run: echo -e "\nRELEASE_KEYSTORE_PASSWORD=$RELEASE_KEYSTORE_PASSWORD" >> local.properties
      - run: echo -e "\nRELEASE_KEY_ALIAS=$RELEASE_KEY_ALIAS" >> local.properties
      - run: echo -e "\nRELEASE_KEY_PASSWORD=$RELEASE_KEY_PASSWORD" >> local.properties
      - run: echo -e "\nDEVELOPMENT_API_SECRET=$nDEVELOPMENT_API_SECRET" >> local.properties
      - run: echo -e "\nRELEASE_API_SECRET=$RELEASE_API_SECRET" >> local.properties

      - run: touch app/google-services.json
      - run: echo $GOOGLE_SERVICE_JSON_BASE64 | base64 -di > app/google-services.json

      - name: Build APK
        run: ./gradlew assembleRelease

      - run: mkdir -p outputs/
      - run: find . -type f -regex ".*\/*\.apk" -exec cp {} outputs/ \;

      - name: Upload APK
        run: ./gradlew uploadApk

      - name: Release Artifact
        uses: actions/upload-artifact@v1
        with:
          name: Builds
          path: outputs/